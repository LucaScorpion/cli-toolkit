#!/usr/bin/env bash
set -euo pipefail

printHelp()
{
    cat <<EOF
Decode and display a JSON Web Token.

Usage: jwt-decode [token]

Example:
    jwt-decode eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJpYXQiOjE1MTYyMzkwMjJ9.qSxzXSZwDRsi3oqx3fBZ2ah8gOIsQZE0Lgkl0kjJ3Ko
Or:
    echo eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjMiLCJpYXQiOjE1MTYyMzkwMjJ9.qSxzXSZwDRsi3oqx3fBZ2ah8gOIsQZE0Lgkl0kjJ3Ko | jwt-decode
EOF
}

for i in "$@"
do
	case "$i" in
		-h|--help)
			printHelp
			exit
			;;
		-*)
			echo "Invalid option: $i"
			exit 1
            ;;
	esac
done

function printJwt {
    # Split the line on '.'.
    IFS='.' read -a PARTS <<< "$1"

    echo 'Header:'
    echo "${PARTS[0]}" | base64 -d | jq
    echo 'Payload:'
    echo "${PARTS[1]}" | base64 -d | jq
}

# If an argument is given, read that. Otherwise, read stdin.
if [ -z ${1+x} ]
then
    while read line
    do
        printJwt "$line"
    done < '/dev/stdin'
else
    printJwt "$1"
fi
